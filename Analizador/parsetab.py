
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASIG BOOL BREAK CADENA CASE COMA COMILLA COMILLA_SIMPLE COMMENT_BLOCK COMMENT_LINE COMPLEX128 COMPLEX64 CONST CONTINUE DEFAULT DIVIDE DOS_PUNTOS ELSE EQ FALSE FLOAT FLOAT32 FLOAT64 FMT FOR FUNC IF IGUAL IMPORT INT INT16 INT32 INT64 INTEGER INTERFACE LCORCH LPARENT L_LLAVE MAP MAYOR_QUE MENOR_QUE MINUS MOD MULT PACKAGE PLACEHOLDER PLUS PRINT PRINTLN PUNTO PUNTO_Y_COMA RANGE RCORCH RPARENT R_LLAVE SEPARADOR SPRINTF STRING STRUCT SWITCH TRUE TYPE UINT UINT16 UINT32 UINT64 VAR VARIABLE returnasignacion : VARIABLE ASIG operaAritmeticaoperaAritmetica : valor\n| valor operadorArit operaAritmeticavalor : INTEGER\n| FLOAT\n| VARIABLEoperadorArit : PLUS\n| MINUS\n| MULT\n| DIVIDE\n| MOD '
    
_lr_action_items = {'VARIABLE':([0,3,9,10,11,12,13,14,],[2,4,4,-7,-8,-9,-10,-11,]),'$end':([1,4,5,6,7,8,15,],[0,-6,-1,-2,-4,-5,-3,]),'ASIG':([2,],[3,]),'INTEGER':([3,9,10,11,12,13,14,],[7,7,-7,-8,-9,-10,-11,]),'FLOAT':([3,9,10,11,12,13,14,],[8,8,-7,-8,-9,-10,-11,]),'PLUS':([4,6,7,8,],[-6,10,-4,-5,]),'MINUS':([4,6,7,8,],[-6,11,-4,-5,]),'MULT':([4,6,7,8,],[-6,12,-4,-5,]),'DIVIDE':([4,6,7,8,],[-6,13,-4,-5,]),'MOD':([4,6,7,8,],[-6,14,-4,-5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'asignacion':([0,],[1,]),'operaAritmetica':([3,9,],[5,15,]),'valor':([3,9,],[6,6,]),'operadorArit':([6,],[9,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> asignacion","S'",1,None,None,None),
  ('asignacion -> VARIABLE ASIG operaAritmetica','asignacion',3,'p_asignacion','main.py',15),
  ('operaAritmetica -> valor','operaAritmetica',1,'p_operaAritmetica','main.py',18),
  ('operaAritmetica -> valor operadorArit operaAritmetica','operaAritmetica',3,'p_operaAritmetica','main.py',19),
  ('valor -> INTEGER','valor',1,'p_valor','main.py',23),
  ('valor -> FLOAT','valor',1,'p_valor','main.py',24),
  ('valor -> VARIABLE','valor',1,'p_valor','main.py',25),
  ('operadorArit -> PLUS','operadorArit',1,'p_operadorArit','main.py',27),
  ('operadorArit -> MINUS','operadorArit',1,'p_operadorArit','main.py',28),
  ('operadorArit -> MULT','operadorArit',1,'p_operadorArit','main.py',29),
  ('operadorArit -> DIVIDE','operadorArit',1,'p_operadorArit','main.py',30),
  ('operadorArit -> MOD','operadorArit',1,'p_operadorArit','main.py',31),
]
